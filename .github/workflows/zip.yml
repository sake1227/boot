name: zip提取

on:
  workflow_dispatch:
    inputs:
      rom_url:
        description: 'ROM 下载直链'
        required: true
        default: ''
      rom_name:
        description: '保存名称'
        required: true
        default: ''

jobs:
  zip:
    runs-on: ubuntu-24.04
    steps:
      - name: 检出代码
        uses: actions/checkout@main

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get -y install python3-pip aria2 p7zip curl
          curl https://rclone.org/install.sh | sudo bash

      - name: 配置 rclone
        run: |
          mkdir -p ~/.config/rclone
          unzip -o rclone.zip -d ~/.config/rclone/

      - name: 下载固件
        run: |
          mkdir -p "${GITHUB_WORKSPACE}/workspace/output" && cd "${GITHUB_WORKSPACE}/workspace"
          echo "正在下载固件包..."
          aria2c -s 16 -x 16 -d . -o firmware.zip "${{ github.event.inputs.rom_url }}"
          if [ ! -f firmware.zip ]; then
            echo "固件包下载失败"
            exit 1
          fi
          ls -lh firmware.zip  # 打印固件包信息
          
      - name: 自动提取分区文件
        run: |
          set -e  # 遇到错误立即退出
          # 确保当前工作目录正确
          cd "${GITHUB_WORKSPACE}/workspace"
          # 检查固件包是否存在
          if [ ! -f firmware.zip ]; then
            echo "错误：固件包 firmware.zip 未找到"
          exit 1
          fi
          # 检查是否包含 payload.bin
          if 7z l -slt firmware.zip | grep -q 'Path = payload.bin'; then
            echo "发现 payload.bin，开始提取..."
            pip install --user git+https://github.com/sake1227/payload-dumper
            export PATH="$HOME/.local/bin:$PATH"
            payload_dumper --partitions boot,vbmeta,init_boot firmware.zip -o output
          else
            echo "未找到 payload.bin，直接提取 boot.img、vbmeta.img 和 init_boot.img"
            # 使用通配符递归提取文件（忽略路径）
            7z e firmware.zip -r "*boot.img" "*vbmeta.img" "*init_boot.img" -ooutput

            # 检查是否成功提取 boot.img
            if [ ! -f output/boot.img ]; then
             echo "错误：未找到 boot.img"
             exit 1
           fi
          fi

      - name: 压缩并上传文件
        run: |
          cd "${GITHUB_WORKSPACE}/workspace/output"
          7z a "${{ github.event.inputs.rom_name }}.zip" -p"${{ secrets.UNZIP_PASSWORD }}" *
          rclone sync "${{ github.event.inputs.rom_name }}.zip" 123:/zanfang
